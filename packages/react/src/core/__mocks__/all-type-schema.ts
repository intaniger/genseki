import {
  bigint,
  bigserial,
  boolean,
  char,
  date,
  decimal,
  doublePrecision,
  integer,
  interval,
  json,
  jsonb,
  line,
  numeric,
  pgEnum,
  pgTable,
  point,
  real,
  serial,
  smallint,
  smallserial,
  text,
  time,
  timestamp,
  varchar,
} from 'drizzle-orm/pg-core'

export const allFieldTypes = pgTable('table', {
  integer: integer(),
  smallint: smallint(),
  bigint: bigint({ mode: 'bigint' }),
  serial: serial().primaryKey(),
  smallserial: smallserial(),
  bigserialNumber: bigserial({ mode: 'number' }),
  bigserialBigInt: bigserial({ mode: 'bigint' }),
  boolean: boolean(),
  text: text(),
  textEnum: text({ enum: ['a', 'b', 'c'] }),
  varchar: varchar({ length: 256 }),
  char: char({ length: 256 }),
  numeric: numeric(),
  decimal: decimal(),
  real: real(),
  doublePrecision: doublePrecision(),
  json: json(),
  jsonType: json().$type<{ a: string }>(),
  jsonb: jsonb(),
  jsonbType: jsonb().$type<{ a: string }>(),
  time: time(),
  timestamp: timestamp(),
  date: date(),
  interval: interval(),
  point: point(),
  line: line(),
  enum: pgEnum('mood', ['sad', 'ok', 'happy'])(),

  // Array
  arrayOfText: text().array(),
  arrayOfNumbers: integer().array(),
  arrayOfObjects: jsonb().array(),
  arrayOfBooleans: boolean().array(),
  arrayOfDates: date().array(),
  arrayOfTimes: time().array(),
  arrayOfTimestamps: timestamp().array(),
  arrayOfPoints: point().array(),
  arrayOfLines: line().array(),
  arrayOfEnums: pgEnum('mood', ['sad', 'ok', 'happy'])().array(),
  arrayOfJson: json().array(),
  arrayOfJsonb: jsonb().array(),
})
